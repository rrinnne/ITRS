#Область ОбработчикиСобытий

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
        Возврат;
    КонецЕсли;
    
	// регистр ОстаткиТоваров
	Движения.ОстаткиТоваров.Записывать = Истина;
	Для Каждого ТекСтрокаТовары из Товары Цикл
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Номенклатура = ТекСтрокаТовары.Товар;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;
	
	Движения.СуммаПродаж.Записывать = Истина;
	Для Каждого ТекСтрокаТовары из Товары Цикл
		Движение = Движения.СуммаПродаж.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Товар = ТекСтрокаТовары.Товар;
		Движение.Клиент = Клиент;
		Движение.Сумма = ТекСтрокаТовары.СуммаВозврата;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Покупка") Тогда
		// Заполнение шапки
		Клиент = ДанныеЗаполнения.Клиент;
		Основание = ДанныеЗаполнения.Ссылка;
		
		Покупка = Основание.ПолучитьОбъект();

        // Очищаем табличную часть на всякий случай
        Товары.Очистить();

        // Добавляем одну строку на основе реквизитов из документа Покупка
        НоваяСтрока = Товары.Добавить();
        НоваяСтрока.Товар = Покупка.Товар;
        НоваяСтрока.Количество = Покупка.Количество;

        // Можно задать значения по умолчанию
        НоваяСтрока.ПричинаВозврата = "";
        НоваяСтрока.СуммаВозврата = Покупка.СуммаДокумента;
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	
КонецПроцедуры




